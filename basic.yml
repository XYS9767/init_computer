---
- hosts: all
  remote_user: root
  become: yes
  tasks:
    # 配置阿里云YUM源（仅适用于CentOS/RHEL）
    - name: Install Aliyun YUM Source
      uri:
        url: http://mirrors.aliyun.com/repo/Centos-7.repo
        dest: /etc/yum.repos.d/CentOS-Base.repo
      when: ansible_os_family == "RedHat"

    # 构建元数据缓存
    - name: Build YUM metadata
      yum:
        update_cache: true
      when: ansible_os_family == "RedHat"

    # 安装EPEL源（仅适用于CentOS/RHEL）
    - name: Install EPEL Release
      yum:
        name: epel-release
        state: present
      when: ansible_os_family == "RedHat"

    # 安装基础工具包
    - name: Install basic tools (CentOS/RHEL)
      yum:
        name:
          - wget
          - vim
          - net-tools
          - lrzsz
          - supervisor
          - ansible
          - unzip
          - git
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install basic tools (Ubuntu/Debian)
      apt:
        name:
          - wget
          - vim
          - net-tools
          - lrzsz
          - supervisor
          - ansible
          - unzip
          - git
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    # 关闭防火墙
    - name: Stop and disable firewalld service
      service:
        name: firewalld
        state: stopped
        enabled: false
      when: ansible_os_family == "RedHat"


    # 复制主机名IP配置脚本
    - name: Copy change_hostname_ip.sh script to /root
      copy:
        src: /root/change_hostname_ip.sh
        dest: /root/change_hostname_ip.sh
        mode: '0755'

    # 设置时区为上海
    - name: Set timezone to Asia/Shanghai
      timezone:
        name: Asia/Shanghai

    # 安装chrony包（适用于CentOS/RHEL）
    - name: 安装chrony (CentOS/RHEL)
      yum:
        name: chrony
        state: present
      when: ansible_os_family == "RedHat"

    # 安装chrony包（适用于Ubuntu/Debian）
    - name: 安装chrony (Ubuntu/Debian)
      apt:
        name: chrony
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    # 启动chronyd服务并设置开机自启
    - name: 启动chronyd服务并设置开机自启
      systemd:
        name: chronyd
        state: started
        enabled: yes

    # 配置阿里云NTP服务器
    - name: 配置阿里云NTP服务器
      lineinfile:
        path: /etc/chrony.conf
        line: "{{ item }}"
        regexp: "^server {{ item.split()[0] }}.*"
        state: present
      loop:
        - "server ntp1.aliyun.com iburst"
        - "server ntp2.aliyun.com iburst"

    # 重启chronyd服务使配置生效
    - name: 重启chronyd服务
      systemd:
        name: chronyd
        state: restarted

    # 验证时间同步状态
    - name: 查看时间同步源状态
      command: chronyc sources
      register: chrony_sources

    - name: 显示同步源状态结果
      debug:
        var: chrony_sources.stdout_lines

    # Vim配置优化
    - name: Clean trailing spaces in /etc/vimrc
      replace:
        path: /etc/vimrc
        regexp: '\s+$'
        replace: ''

    - name: Prepare custom Vim settings
      set_fact:
        custom_vim_settings: "{{ temp_settings | regex_replace('\\s+$', '') | regex_replace('^\\s*$', '') }}"
      vars:
        temp_settings: |
          set ignorecase
          autocmd BufNewFile *.py,*.cc,*.sh,*.java exec ":call SetTitle()"
          func! SetTitle()
          if expand("%:e")=='sh'
            call setline(1, "#!/bin/bash")
            call setline(2,"##############################################################")
            call setline(3, "# File Name:".expand("%"))
            call setline(4, "# Version:V1.0")
            call setline(5, "# Author:oranges_are_ripe.")
            call setline(6, "# Organization:https://uniqueyouzhi.feishu.cn")
            call setline(7, "# Desc:输入脚本作用")
            call setline(8,"##############################################################")
          endif
          endfunc
      register: temp_result
      changed_when: false

    - name: Append custom Vim settings to /etc/vimrc
      blockinfile:
        path: /etc/vimrc
        block: "{{ custom_vim_settings }}"
        state: present

    - name: Remove ANSIBLE MANAGED BLOCK markers
      replace:
        path: /etc/vimrc
        regexp: '^# (BEGIN|END) ANSIBLE MANAGED BLOCK$\n?'
        replace: ''
